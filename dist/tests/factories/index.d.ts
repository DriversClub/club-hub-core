import * as Factory from 'factory.ts';
declare const createMemberFactory: Factory.Factory<any>;
declare const createMemberMetadataFactory: Factory.Factory<any>;
declare const createProviderFactory: Factory.Factory<any>;
declare const createVehicleFactory: Factory.Factory<any>;
declare const createServiceFactory: Factory.Factory<any>;
declare const createMember: () => Promise<string>;
declare const createMemberWithName: (firstName: string) => Promise<string>;
declare const createMemberMetadata: (memberID: string) => Promise<string>;
declare const createEvent: () => Promise<string>;
declare const createPrivateEvent: () => Promise<string>;
declare const createVehicle: (memberID: string) => Promise<string>;
declare const createVehicleWithMake: (memberID: string, make: string) => Promise<string>;
declare const createRSVP: (memberID: string, eventID: string) => Promise<string>;
declare const createService: (vehicleID: string, memberID?: string, date?: string) => Promise<string>;
declare const createProvider: () => Promise<string>;
export { createMember as CreateMember };
export { createMemberWithName as CreateMemberWithName };
export { createMemberFactory as CreateMemberFactory };
export { createMemberMetadata as CreateMemberMetadata };
export { createMemberMetadataFactory as CreateMemberMetadataFactory };
export { createEvent as CreateEvent };
export { createPrivateEvent as CreatePrivateEvent };
export { createRSVP as CreateRSVP };
export { createVehicle as CreateVehicle };
export { createVehicleWithMake as CreateVehicleWithMake };
export { createVehicleFactory as CreateVehicleFactory };
export { createService as CreateService };
export { createServiceFactory as CreateServiceFactory };
export { createProvider as CreateProvider };
export { createProviderFactory as createProviderFactory };
